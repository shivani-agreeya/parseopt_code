#dbgw-stub profile queries postgres for Available logs directly, instead of fetching from DB Gateway
spring.profiles.active=dbgw-stub

hdfs.job.env=DEV
hdfs.job.fixedRate=60000

#http://10.20.40.117:9090/dbgw/api/v1/logs/dlf/5/DEV
hdfs.job.dbgw_url=http://localhost:8080/dbgw/api/v1/logs/
hdfs.job.dbgw_filetype=all
hdfs.job.dbgw_limit=2

hdfs.job.dist_cp=true

#HDFS Dir Details
#hdfs.job.source_uri=hdfs://localhost:9000/ <= if source log file in hdfs, need to specify hdfs authority (host:port)
hdfs.job.source_uri=file://
hdfs.job.hdfs_uri=hdfs://localhost:9000
hdfs.job.hdfs_output_path=/oneparser/data/dmat/staging/
hdfs.job.path_to_core_site=file:///tmp/core-site.xml
hdfs.job.path_to_hdfs_site=file:///tmp/hdfs-site.xml

#Kafka
hdfs.job.ns_topic=ns

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.bootstrap-servers=0.0.0.0:9092
spring.kafka.producer.properties.schema.registry.url=http://0.0.0.0:8081
spring.kafka.template.default-topic=logs

#DB
hdfs.job.update_db=false

spring.datasource.url=jdbc:postgresql://localhost:5432/dmat_new
spring.datasource.username=postgres
spring.datasource.password=pw
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.properties.hibernate.default_schema=dmat_qa

logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace

# Actuator / Management
management.endpoints.web.exposure.include=health,info,env,logfile,loggers,metrics
management.endpoint.health.show-details=always

logging.level.root=info
logging.file.name=../logs/oneparser-hdfscopier.log
